name: Build the windows version of the RustDesk

on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      upload-tag:
        type: string
        default: "Nightly"
  workflow_dispatch:
    inputs:
      upload-artifact:
        description: "Upload artifacts to GitHub"
        type: boolean
        default: true
      upload-tag:
        description: "Tag name for the uploaded artifacts"
        type: string
        default: "Nightly"

# NOTE: F-Droid builder script 'flutter/build_fdroid.sh' reads environment
# variables from this workflow!
#
# It does NOT read build steps, however, so please fix 'flutter/build_fdroid.sh
# whenever you add changes to Android CI build action ('build-rustdesk-android')
# in this file!

env:
  SCITER_RUST_VERSION: "1.75" # https://github.com/rustdesk/rustdesk/discussions/7503, also 1.78 has ABI change which causes our sciter version not working, https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  RUST_VERSION: "1.75" # sciter failed on m1 with 1.78 because of https://blog.rust-lang.org/2024/03/30/i128-layout-update.html
  MAC_RUST_VERSION: "1.81" # 1.81 is requred for macos, because of https://github.com/yury/cidre requires 1.81
  CARGO_NDK_VERSION: "3.1.2"
  SCITER_ARMV7_CMAKE_VERSION: "3.29.7"
  SCITER_NASM_DEBVERSION: "2.15.05-1"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  ANDROID_FLUTTER_VERSION: "3.24.5"
  # for arm64 linux because official Dart SDK does not work
  FLUTTER_ELINUX_VERSION: "3.16.9"
  TAG_NAME: "${{ inputs.upload-tag }}"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  # vcpkg version: 2025.06.13
  # If we change the `VCPKG COMMIT_ID`, please remember:
  # 1. Call `$VCPKG_ROOT/vcpkg x-update-baseline` to update the baseline in `vcpkg.json`.
  #  Or we may face build issue like 
  #  https://github.com/rustdesk/rustdesk/actions/runs/14414119794/job/40427970174
  # 2. Update the `VCPKG_COMMIT_ID` in `ci.yml` and `playground.yml`.
  VCPKG_COMMIT_ID: "dd3097e305afa53f7b4312371f62058d2e665320"
  VERSION: "1.4.2"
  NDK_VERSION: "r27c"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: "${{ secrets.ANDROID_SIGNING_KEY }}"
  MACOS_P12_BASE64: "${{ secrets.MACOS_P12_BASE64 }}"
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  SIGN_BASE_URL: "${{ secrets.SIGN_BASE_URL }}"

jobs:
  generate-bridge:
    uses: ./.github/workflows/bridge.yml

  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: ${{ inputs.upload-artifact }}
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10
    strategy:
      fail-fast: false

  build-for-windows-flutter:
    name: Build For Windows Flutter
    needs: [build-RustDeskTempTopMostWindow, generate-bridge]
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          # - { target: i686-pc-windows-msvc        , os: windows-2022                  }
          # - { target: x86_64-pc-windows-gnu       , os: windows-2022                  }
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-2022,
              arch: x86_64,
              vcpkg-triplet: x64-windows-static,
            }
          # - { target: aarch64-pc-windows-msvc, os: windows-2022, arch: aarch64 }
    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v8
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0 #https://github.com/subosito/flutter-action/issues/277
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # https://github.com/flutter/flutter/issues/155685
      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.SCITER_RUST_VERSION }}
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.os }}

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

      - name: Restore base cache
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}/downloads
          key: vcpkg-dl-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}

      - name: Restore binary cache 
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
            %APPDATA%/vcpkg/archives
          # 动态生成缓存键（包含系统类型和 vcpkg.json 的哈希）
          key: ${{ runner.os }}-${{ matrix.job.vcpkg-triplet }}-vcpkg-${{ hashFiles('**/vcpkg.json', '**/vcpkg-configuration.json') }}

      - name: Cache vcpkg build trees
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}/buildtrees
          key: buildtrees-${{ matrix.job.vcpkg-triplet }}-${{ hashFiles('**/vcpkg.json') }}

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.job.vcpkg-triplet }}
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet ${{ matrix.job.vcpkg-triplet }} \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-${{ matrix.job.vcpkg-triplet }}-rel-out.log" || true
        shell: bash

      - name: Cache Flutter
        uses: actions/cache@v4
        with:
          path: |
            flutter/bin/cache
            flutter/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache external files
        uses: actions/cache@v4
        with:
          path: |
            usbmmidd_v2.zip
            rustdesk_printer_driver_v4.zip
            printer_driver_adapter.zip
            sha256sums
          key: ${{ runner.os }}-external-files

      - name: Build rustdesk
        env:
          PERMANENT_PASSWORD: ${{ secrets.PERMANENT_PASSWORD }}
          DATA_SERVER_URL: ${{ secrets.DATA_SERVER_URL }}
          UPDATER_URL: ${{ secrets.UPDATER_URL }}
          RENDEZVOUS_SERVERS: ${{ secrets.RENDEZVOUS_SERVERS }}
          RS_PUB_KEY: ${{ secrets.RS_PUB_KEY }}
          API_SERVER: ${{ secrets.API_SERVER }}
        run: |
          # Windows: build RustDesk
          python3 .\build.py --portable --hwcodec --flutter --vram --skip-portable-pack
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

          # Download usbmmidd_v2.zip and extract it to ./rustdesk
          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath .
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv -Force .\usbmmidd_v2 ./rustdesk

          # Download printer driver files and extract them to ./rustdesk
          try {
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/rustdesk_printer_driver_v4-1.4.zip -OutFile rustdesk_printer_driver_v4-1.4.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/printer_driver_adapter.zip -OutFile printer_driver_adapter.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/sha256sums -OutFile sha256sums

            # Check and move the files
            $checksum_driver = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) \*rustdesk_printer_driver_v4-1.4\.zip$').Matches.Groups[1].Value
            $downloadsum_driver = Get-FileHash -Path rustdesk_printer_driver_v4-1.4.zip -Algorithm SHA256
            $checksum_adapter = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) \*printer_driver_adapter\.zip$').Matches.Groups[1].Value
            $downloadsum_adapter = Get-FileHash -Path printer_driver_adapter.zip -Algorithm SHA256
            if ($checksum_driver -eq $downloadsum_driver.Hash -and $checksum_adapter -eq $downloadsum_adapter.Hash) {
                Write-Output "rustdesk_printer_driver_v4-1.4, checksums match, extract the file."
                Expand-Archive rustdesk_printer_driver_v4-1.4.zip -DestinationPath .
                mkdir ./rustdesk/drivers
                mv -Force .\rustdesk_printer_driver_v4-1.4 ./rustdesk/drivers/RustDeskPrinterDriver
                Expand-Archive printer_driver_adapter.zip -DestinationPath .
                mv -Force .\printer_driver_adapter.dll ./rustdesk
            } elseif ($checksum_driver -ne $downloadsum_driver.Hash) {
                Write-Output "rustdesk_printer_driver_v4-1.4, checksums do not match, ignore the file."
            } else {
                Write-Output "printer_driver_adapter.dll, checksums do not match, ignore the file."
            }
          } catch {
              Write-Host "Ingore the printer driver error."
          }

      - name: find Runner.res
        # Windows: find Runner.res (compiled from ./flutter/windows/runner/Runner.rc), copy to ./Runner.res
        # Runner.rc does not contain actual version, but Runner.res does
        continue-on-error: true
        shell: bash
        run: |
          runner_res=$(find . -name "Runner.res");
          if [ "$runner_res" == "" ]; then
            echo "Runner.res: not found";
          else
            echo "Runner.res: $runner_res";
            cp $runner_res ./libs/portable/Runner.res;
            echo "list ./libs/portable/Runner.res";
            ls -l ./libs/portable/Runner.res;
          fi

      - name: Download RustDeskTempTopMostWindow artifacts
        uses: actions/download-artifact@master
        if: ${{ inputs.upload-artifact }}
        with:
          name: topmostwindow-artifacts
          path: "./rustdesk"

      - name: Upload unsigned
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@master
        with:
          name: rustdesk-unsigned-windows-${{ matrix.job.arch }}
          path: rustdesk

      - name: Zip rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Compress-Archive -Path ./rustdesk/*.dll, ./rustdesk/*.exe -DestinationPath ./rustdesk/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: bash
        run: |
          curl -X POST -F "file=@./rustdesk/unsigned_files.zip" \
            -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
            -m 900 \
            "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./rustdesk/signed_files.zip

      - name: Unzip rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Expand-Archive -Path ./rustdesk/signed_files.zip -DestinationPath ./rustdesk/ -Force
          Remove-Item ./rustdesk/unsigned_files.zip
          Remove-Item ./rustdesk/signed_files.zip

      - name: Create custom.txt file
        shell: bash
        run: |
          echo -n "${{ secrets.CUSTOMTXT }}" | cat > ./rustdesk/custom.txt

      - name: Build self-extracted executable
        shell: bash
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          sed -i '/dpiAware/d' res/manifest.xml
          pushd ./libs/portable
          pip3 install -r requirements.txt
          python3 ./generate.py -f ../../rustdesk/ -o . -e ../../rustdesk/rustdesk.exe
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe ./SignOutput/rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}.exe

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build msi
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          pushd ./res/msi
          python preprocess.py --arp -d ../../rustdesk
          nuget restore msi.sln
          msbuild msi.sln -p:Configuration=Release -p:Platform=x64 /p:TargetVersion=Windows10
          mv ./Package/bin/x64/Release/en-us/Package.msi ../../SignOutput/rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}.msi
          sha256sum ../../SignOutput/rustdesk-*.msi

      - name: Zip rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Compress-Archive -Path ./SignOutput/*.exe, ./SignOutput/*.msi -DestinationPath ./SignOutput/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: bash
        run: |
          curl -X POST -F "file=@./SignOutput/unsigned_files.zip" \
            -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
            -m 900 \
            "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./SignOutput/signed_files.zip

      - name: Unzip rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Expand-Archive -Path ./SignOutput/signed_files.zip -DestinationPath ./SignOutput/ -Force
          Remove-Item ./SignOutput/unsigned_files.zip
          Remove-Item ./SignOutput/signed_files.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          name: windows-flutter-artifacts
          path: ./SignOutput/
          retention-days: 1

  # The fallback for the flutter version, we use Sciter for 32bit Windows.
  build-for-windows-sciter:
    name: Build For Windows Sciter
    runs-on: ${{ matrix.job.os }}
    # Temporarily disable this action due to additional test is needed.
    # if: false
    strategy:
      fail-fast: false
      matrix:
        job:
          # - { target: i686-pc-windows-msvc        , os: windows-2022                  }
          # - { target: x86_64-pc-windows-gnu       , os: windows-2022                  }
          - {
              target: i686-pc-windows-msvc,
              os: windows-2022,
              arch: x86,
              vcpkg-triplet: x86-windows-static,
            }
          # - { target: aarch64-pc-windows-msvc, os: windows-2022 }
    outputs:
      formatted-time: ${{ steps.set-time.outputs.current_time }}
    steps:
      - name: Get current time
        id: set-time
        shell: pwsh
        run: |
          $utcTime = Get-Date -UFormat "%Y-%m-%d %H:%M:%S"
          $beijingTime = [System.TimeZoneInfo]::ConvertTimeBySystemTimeZoneId([datetime]$utcTime, "China Standard Time")
          $formattedBeijingTime = $beijingTime.ToString("yyyy-MM-dd HH:mm:ss")
          echo "current_time=$formattedBeijingTime" >> $env:GITHUB_OUTPUT

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v8
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install LLVM and Clang
        uses: rustdesk-org/install-llvm-action-32bit@master
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly-2023-10-13-${{ matrix.job.target }} # must use nightly here, because of abi_thiscall feature required
          targets: ${{ matrix.job.target }}
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.os }}-sciter

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

      - name: Restore base cache
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}/downloads
          key: vcpkg-dl-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}

      - name: Restore binary cache 
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
            %APPDATA%/vcpkg/archives
          # 动态生成缓存键（包含系统类型和 vcpkg.json 的哈希）
          key: ${{ runner.os }}-${{ matrix.job.vcpkg-triplet }}-vcpkg-${{ hashFiles('**/vcpkg.json', '**/vcpkg-configuration.json') }}

      - name: Cache vcpkg build trees
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_ROOT }}/buildtrees
          key: buildtrees-${{ matrix.job.vcpkg-triplet }}-${{ hashFiles('**/vcpkg.json') }}

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.job.vcpkg-triplet }}
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet ${{ matrix.job.vcpkg-triplet }} \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-${{ matrix.job.vcpkg-triplet }}-rel-out.log" || true
        shell: bash

      - name: Cache Sciter
        uses: actions/cache@v4
        with:
          path: ./Release/sciter.dll
          key: ${{ runner.os }}-sciter-v4.4.8.3-x86

      - name: Cache USBMMIDD
        uses: actions/cache@v4
        with:
          path: |
            usbmmidd_v2.zip
            usbmmidd_v2/
          key: ${{ runner.os }}-usbmmidd-v2-x86

      - name: Build rustdesk
        id: build
        shell: bash
        env:
          PERMANENT_PASSWORD: ${{ secrets.PERMANENT_PASSWORD }}
          DATA_SERVER_URL: ${{ secrets.DATA_SERVER_URL }}
          UPDATER_URL: ${{ secrets.UPDATER_URL }}
          RENDEZVOUS_SERVERS: ${{ secrets.RENDEZVOUS_SERVERS }}
          RS_PUB_KEY: ${{ secrets.RS_PUB_KEY }}
          API_SERVER: ${{ secrets.API_SERVER }}
        run: |
          python3 res/inline-sciter.py
          # Patch sciter x86
          sed -i 's/branch = "dyn"/branch = "dyn_x86"/g' ./Cargo.toml
          # 启用并行编译
          export CARGO_BUILD_JOBS=$(nproc)
          cargo build --features inline,vram,hwcodec --release --bins
          mkdir -p ./Release
          mv ./target/release/rustdesk.exe ./Release/rustdesk.exe
          # 如果缓存未命中才下载 sciter.dll
          if [ ! -f "./Release/sciter.dll" ]; then
            curl -LJ -o ./Release/sciter.dll https://github.com/c-smile/sciter-sdk/raw/master/bin.win/x32/sciter.dll
          fi
          echo "output_folder=./Release" >> $GITHUB_OUTPUT
          # 如果缓存未命中才下载 USBMMIDD
          if [ ! -f "usbmmidd_v2.zip" ]; then
            curl -LJ -o ./usbmmidd_v2.zip https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip
            unzip usbmmidd_v2.zip
            # Do not remove x64 files, because the user may run the 32bit version on a 64bit system.
            # Do not remove ./usbmmidd_v2/deviceinstaller64.exe, as x86 exe cannot install and uninstall drivers when running on x64,
            # we need the x64 exe to install and uninstall the driver.
            rm -rf ./usbmmidd_v2/deviceinstaller.exe ./usbmmidd_v2/usbmmidd.bat
          fi
          mv ./usbmmidd_v2 ./Release || true

      - name: find Runner.res
        # Windows: find Runner.res (compiled from ./flutter/windows/runner/Runner.rc), copy to ./Runner.res
        # Runner.rc does not contain actual version, but Runner.res does
        continue-on-error: true
        shell: bash
        run: |
          runner_res=$(find . -name "Runner.res");
          if [ "$runner_res" == "" ]; then
            echo "Runner.res: not found";
          else
            echo "Runner.res: $runner_res";
            cp $runner_res ./libs/portable/Runner.res;
            echo "list ./libs/portable/Runner.res";
            ls -l ./libs/portable/Runner.res;
          fi

      - name: Zip rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Compress-Archive -Path ./Release/*.dll, ./Release/*.exe -DestinationPath ./Release/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: bash
        run: |
          curl -X POST -F "file=@./Release/unsigned_files.zip" \
            -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
            -m 900 \
            "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./Release/signed_files.zip

      - name: Unzip rustdesk files
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Expand-Archive -Path ./Release/signed_files.zip -DestinationPath ./Release/ -Force
          Remove-Item ./Release/unsigned_files.zip
          Remove-Item ./Release/signed_files.zip

      - name: Create custom.txt file
        shell: bash
        run: |
          echo -n "${{ secrets.CUSTOMTXT }}" | cat > ./Release/custom.txt

      - name: Build self-extracted executable
        shell: bash
        run: |
          sed -i '/dpiAware/d' res/manifest.xml
          pushd ./libs/portable
          pip3 install -r requirements.txt
          python3 ./generate.py -f ../../Release/ -o . -e ../../Release/rustdesk.exe
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe ./SignOutput/rustdesk-${{ env.VERSION }}-${{ matrix.job.arch }}-sciter.exe

      - name: Zip rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Compress-Archive -Path ./SignOutput/*.exe, ./SignOutput/*.msi -DestinationPath ./SignOutput/unsigned_files.zip -CompressionLevel Fastest

      - name: Sign rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: bash
        run: |
          curl -X POST -F "file=@./SignOutput/unsigned_files.zip" \
            -H "X-API-KEY: ${{ secrets.SIGN_API_KEY }}" \
            -m 900 \
            "${{ secrets.SIGN_BASE_URL }}/sign/" -o ./SignOutput/signed_files.zip

      - name: Unzip rustdesk self-extracted file
        if: env.UPLOAD_ARTIFACT == 'true' && env.SIGN_BASE_URL != ''
        shell: pwsh
        run: |
          Expand-Archive -Path ./SignOutput/signed_files.zip -DestinationPath ./SignOutput/ -Force
          Remove-Item ./SignOutput/unsigned_files.zip
          Remove-Item ./SignOutput/signed_files.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        with:
          name: windows-sciter-artifacts
          path: ./SignOutput/
          retention-days: 1

  publish-release:
    name: Publish Release
    needs: [build-for-windows-flutter, build-for-windows-sciter]
    if: ${{ inputs.upload-artifact }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Generate Release Notes
        id: gen_notes
        run: |
          TIMESTAMP="${{ needs.build-for-windows-sciter.outputs.formatted-time }}"
          
          # 在 Ubuntu 中确保正确处理换行符（使用 tr 替代 sed 更可靠）
          COMMIT_MSG=$(git log -1 --pretty=%B | tr '\n' ',' | sed 's/,/<br>/g')

          # 去掉最后一个 <br>
          COMMIT_MSG=${COMMIT_MSG%,}
          
          # 使用 heredoc 语法提高可读性
          {
            echo "notes<<EOF"
            echo '| 项目                | 值                                  |'
            echo '|---------------------|-------------------------------------|'
            echo '| **触发分支**        | `'"${{ github.ref_name }}"'`         |'
            echo '| **提交哈希**        | `'"${{ github.sha }}"'`              |'
            echo '| **提交信息**        | '"${COMMIT_MSG}"'                    |'
            echo '| **构建时间**        | '"${TIMESTAMP}"'                     |'
            echo '| **工作流运行**      | [#'"${{ github.run_number }}"']('"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"') |'
            echo '| **Rust 版本**       | `'"${{ env.RUST_VERSION }}"'`       |'
            echo '| **Flutter 版本**    | `'"${{ env.FLUTTER_VERSION }}"'`    |'
            echo '| **VCPKG 提交**      | `'"${{ env.VCPKG_COMMIT_ID }}"'`    |'
            echo "EOF"
            echo "timestamp=${TIMESTAMP}"
          } >> $GITHUB_OUTPUT
        shell: bash

      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: ${{ github.workspace }}/artifacts
          pattern: windows-*

      - name: Verify tag exists
        id: check_tag
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin | grep -q "refs/tags/$TAG_NAME$" && echo "true" || echo "false")
          echo "tag_exists=$TAG_EXISTS" >> $GITHUB_OUTPUT
          if [ "$TAG_EXISTS" = "true" ]; then
            echo "Tag $TAG_NAME exists."
          else
            echo "Tag $TAG_NAME does not exist."
          fi

      - name: Delete associated Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          # 检查 Release 是否存在
          if gh release view "$TAG_NAME" >/dev/null 2>&1; then
            echo "Deleting release associated with $TAG_NAME"
            gh release delete "$TAG_NAME" --yes
          else
            echo "No release exists for $TAG_NAME"
          fi

      - name: Delete remote tag
        if: steps.check_tag.outputs.tag_exists == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          git push --delete origin "refs/tags/$TAG_NAME"
          echo "Tag $TAG_NAME has been deleted."

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          prerelease: true
          name: "${{ env.TAG_NAME }} Build ${{ steps.gen_notes.outputs.timestamp }}"
          body: ${{ steps.gen_notes.outputs.notes }}
          files: |
            ${{ github.workspace }}/artifacts/windows-flutter-artifacts/rustdesk-${{ env.VERSION }}-x86_64.exe
            ${{ github.workspace }}/artifacts/windows-flutter-artifacts/rustdesk-${{ env.VERSION }}-x86_64.msi
            ${{ github.workspace }}/artifacts/windows-sciter-artifacts/rustdesk-${{ env.VERSION }}-x86-sciter.exe
